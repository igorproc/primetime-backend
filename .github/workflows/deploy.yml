name: Deploy

on:
  push:
    branches:
      - dev
      - main

env:
  DOCKER_COMPOSE_VERSION: 1.29.2

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ (github.ref == 'refs/heads/dev' && 'Development') || (github.ref == 'refs/heads/stage' && 'Staging') || (github.ref == 'refs/heads/main' && 'Production') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Set environment specific variables
        id: set-env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "::set-output name=PORT::3803"
            echo "::set-output name=ENVIRONMENT_NAME::dev"
            echo "::set-output name=BRANCH_NAME::dev"
          elif [ "${{ github.ref }}" == "refs/heads/stage" ]; then
            echo "::set-output name=PORT::3802"
            echo "::set-output name=ENVIRONMENT_NAME::stage"
          echo "::set-output name=BRANCH_NAME::stage"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "::set-output name=PORT::3801"
            echo "::set-output name=ENVIRONMENT_NAME::production"
            echo "::set-output name=BRANCH_NAME::main"
          fi

      - name: Deploy to server
        run: |
          scp -r ./* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/home/projects/primetime-backend-${{ steps.set-env.outputs.ENVIRONMENT_NAME }}
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "\
          export BRANCH_NAME=${{ steps.set-env.outputs.BRANCH_NAME }} \
          PORT=${{ steps.set-env.outputs.PORT }} \
          ENVIRONMENT_NAME=${{ steps.set-env.outputs.ENVIRONMENT_NAME }} && \
          cd /home/projects/primetime-backend-${{ steps.set-env.outputs.ENVIRONMENT_NAME }} && \
          docker-compose down && \
          docker-compose build --no-cache && \
          docker-compose up -d --force-recreate"

        env:
          PORT: ${{ steps.set-env.outputs.PORT }}
          ENVIRONMENT_NAME: ${{ steps.set-env.outputs.ENVIRONMENT_NAME }}
          BRANCH_NAME: ${{ steps.set-env.outputs.BRANCH_NAME }}
